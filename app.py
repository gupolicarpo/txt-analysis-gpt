import streamlit as st
import openai
from dotenv import load_dotenv
import os
from docx import Document
import PyPDF2

load_dotenv()
openai.api_key = os.getenv("OPENAI_API_KEY")

st.title("ðŸ“š GPT Academic Text Analyzer (Prototype)")

uploaded_file = st.file_uploader(
    "Upload your thesis file (.txt, .docx, .pdf)", 
    type=['txt', 'docx', 'pdf']
)

def read_txt(file):
    return file.read().decode("utf-8")

def read_docx(file):
    doc = Document(file)
    return '\n'.join([para.text for para in doc.paragraphs])

def read_pdf(file):
    reader = PyPDF2.PdfReader(file)
    text = ''
    for page in reader.pages:
        text += page.extract_text()
    return text

if uploaded_file:
    file_type = uploaded_file.type
    
    if file_type == "text/plain":
        text = read_txt(uploaded_file)
    elif file_type == "application/vnd.openxmlformats-officedocument.wordprocessingml.document":
        text = read_docx(uploaded_file)
    elif file_type == "application/pdf":
        text = read_pdf(uploaded_file)
    else:
        st.error("Unsupported file type!")
        st.stop()
    
    prompt = f"""
    Analise detalhadamente o texto acadÃªmico abaixo quanto Ã :
    1. CoerÃªncia geral.
    2. Qualidade lÃ³gica e argumentativa.
    3. AdequaÃ§Ã£o Ã s normas ABNT.
    ForneÃ§a sugestÃµes especÃ­ficas para melhoria, se necessÃ¡rio.

    Texto acadÃªmico:
    {text}
    """

    with st.spinner("GPT estÃ¡ analisando seu texto..."):
        response = openai.ChatCompletion.create(
            model="gpt-4-turbo",
            messages=[
                {"role": "system", "content": "VocÃª Ã© um especialista acadÃªmico que ajuda a analisar teses universitÃ¡rias."},
                {"role": "user", "content": prompt}
            ],
            temperature=0.2,
            max_tokens=1000,
